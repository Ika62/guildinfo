{% extends 'index.twig' %}

{% block body %}
   <div align="center">

     <div class="emblem-container">

     {%if guild.side == 1 %}
        <img class="emblem" src="/images/guild/tabards/ring-horde.png">
     {% else %}
        <img class="emblem" src="/images/guild/tabards/ring-alliance.png">
     {%endif %}
     <img class="emblem-front" src="/images/guild/tabards/shadow_00.png">
     <img id="guild-background" class="emblem-front" src="/images/guild/tabards/bg_00.png">

     <img class="emblem-front" src="/images/guild/tabards/hooks.png">
     <img class="emblem-front" src="/images/guild/tabards/overlay_00.png">
     <img id="guild-border" class="emblem-front-border" src="/images/guild/tabards/border_0{{guild.emblem.border}}.png">
     <img id="guild-icon" class="emblem-front-logo" src="/images/guild/tabards/emblem_{{guild.emblem.icon}}.png">

     </div>

     <h1> {{ guild.name }}</h1>
     <p>Serveur: {{ guild.realm }} </p>
     <p>Niveau: {{ guild.level }} </p>
     <p>Points de haut-faits: {{ guild.achievementPoints }} </p>

   </div>

    <script>

    window.onload = function() {
      var background = document.getElementById('guild-background');
      var border = document.getElementById('guild-border');
      var icon = document.getElementById('guild-icon');
      var canvas = document.createElement("canvas");
      var ctx = canvas.getContext("2d");
      var originalPixels = null;
      var currentPixels = null;

      recolor(background, '{{ guild.emblem.backgroundColor}}');
      recolor(border, '{{ guild.emblem.borderColor}}');
      recolor(icon, '{{ guild.emblem.iconColor}}');
      function recolor(img, color)
      {
          canvas.width = img.width;
          canvas.height = img.height;
          ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, img.width, img.height);
          originalPixels = ctx.getImageData(0, 0, img.width, img.height);
          currentPixels = ctx.getImageData(0, 0, img.width, img.height);

          changeColor(img, color.substring(2,8));
      }

      function hexToRGB(hex){
        var bigint = parseInt(hex, 16);
        var r = (bigint >> 16) & 255;
        var g = (bigint >> 8) & 255;
        var b = bigint & 255;

        return {
          'R' : r,
          'G' : g,
          'B' : b
        };
      }

      function changeColor(img, color)
      {

        /*  To use if color index is ever added to Battlenet API.
        var _colorMap = [
              // Background
        			[[215,32,112],[171,0,76],[87,0,0],[225,105,26],[180,56,0],[133,11,0],[237,151,22],[205,110,0],[155,61,0],[239,207,20],[207,162,0],[158,113,0],
              [226,216,20],[183,177,0],[133,128,0],[206,209,24],[159,161,3],[112,115,0],[153,206,27],[108,154,3],[65,108,0],[30,210,96],[4,157,63],[0,110,11],
              [29,206,169],[4,152,122],[0,107,74],[33,177,214],[3,109,139],[0,81,111],[72,125,193],[38,85,145],[0,39,98],[188,75,195],[145,42,155],[108,8,128],
              [202,17,191],[173,0,162],[124,0,116],[219,30,160],[149,0,97],[121,0,68],[160,108,44],[108,66,15],[53,16,0],[15,26,31],[117,124,120],[136,145,139],
              [156,166,159],[211,211,198],[229,107,140]],

              //border
        			[[97,42,44],[109,69,46],[119,101,36],[118,114,36],[108,118,36],[85,108,48],[76,109,48],[48,108,66],[48,105,107],[48,80,108],[55,60,100],[87,54,100],
              [100,55,76],[103,51,53],[153,159,149],[38,46,38],[155,94,28]],

              //icon
        			[[102,0,32],[103,35,0],[103,69,0],[103,86,0],[98,102,0],[80,102,0],[54,102,0],[0,102,30],[0,102,86],[0,72,102],[9,42,94],[86,9,94],
              [93,10,79],[84,54,10],[177,183,176],[16,20,22],[221,163,90]]
		        ];
          */
          if(!originalPixels) return; // Check if image has loaded
          var newColor = hexToRGB(color);
          var intensityScale = 19.0;
          var blend = 1.0 / 3.0;
          var added_r = newColor.R / intensityScale + newColor.R * blend;
          var added_g = newColor.G / intensityScale + newColor.G * blend;
          var added_b = newColor.B / intensityScale + newColor.B * blend;
          var scale_r = newColor.R / 255.0 + blend;
          var scale_g = newColor.G / 255.0 + blend;
          var scale_b = newColor.B / 255.0 + blend;

          for(var I = 0, L = originalPixels.data.length; I < L; I += 4)
          {
              if(currentPixels.data[I + 3] > 0) // If it's not a transparent pixel
              {
                  currentPixels.data[I] =  originalPixels.data[I] * scale_r + added_r;
                  currentPixels.data[I + 1] =  originalPixels.data[I + 1]  * scale_g + added_g;
                  currentPixels.data[I + 2] =  originalPixels.data[I + 2] * scale_b + added_b;
              }
          }

          ctx.putImageData(currentPixels, 0, 0);
          img.src = canvas.toDataURL("image/png");
      }
        }

    </script>
{% endblock %}

{% block stylesheets %}
<style>
    body { background: #F5F5F5; font: 18px/1.5 sans-serif; }
    h1, h2 { line-height: 1.2; margin: 0 0 .5em; }
    h1 { font-size: 36px; }
    h2 { font-size: 21px; margin-bottom: 1em; }
    p { margin: 0 0 1em 0; }
    a { color: #0000F0; }
    a:hover { text-decoration: none; }
    code { background: #F5F5F5; max-width: 100px; padding: 2px 6px; word-wrap: break-word; }
    #welcome h1 span { display: block; font-size: 75%; }
    @media (min-width: 768px) {
        #status a, #next a { display: block; }
        @-webkit-keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
        @keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
    }
    img {
      user-drag: none;
      user-select: none;
      -moz-user-select: none;
      -webkit-user-drag: none;
      -webkit-user-select: none;
      -ms-user-select: none;
    }
    .emblem-container {
      margin:0;
      padding:0;
      height:216px;
      width:216px;
      max-height:216px;
      max-width:216px;
      position:relative;
      overflow:visible;
      margin: 10px;
    }
    .emblem {
      position: absolute;
      top:0;
      left:0;
    }
    .emblem-front {
      position: absolute;
      top:25px;
      left:18px;
    }
    .emblem-front-border {
      position: absolute;
      top:38px;
      left:31px;
    }
    .emblem-front-logo {
      position: absolute;
      top:55px;
      left:33px;
    }
</style>
{% endblock %}
